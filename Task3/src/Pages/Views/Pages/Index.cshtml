@using Pages.Models
@using Pages.ViewComponents

@model PagesViewModel

@{
    ViewData["Title"] = "Page";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Pages" asp-action="Index" method="get">
    <p>
        Url: <input type="text" name="pageUrl">
        Title: <input type="text" name="pageTitle">
        <input type="submit" value="Filter" />
    </p>
</form>
    <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.ActionLink("UrlName", "Index", new { sortOrder = ViewBag.UrlSortParm })
                    </th>
                    <th>
                        @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSortParm })
                    </th>
                    <th>
                        @Html.ActionLink("Description", "Index", new { sortOrder = ViewBag.DescriptionSortParm })
                    </th>
                    <th>
                        @Html.ActionLink("Content", "Index", new { sortOrder = ViewBag.ContentSortParm })
                    </th>
                    <th>
                        @Html.ActionLink("Added Date", "Index", new { sortOrder = ViewBag.DateSortParm })
                    </th>
                    <th></th>
                </tr>
            </thead>
        <tbody>

           
            @foreach (var item in Model.pages)
            {
                    <tr>
                        <td>
                            <a asp-action="Custom" asp-route-id="@item.PageID">@Html.DisplayFor(modelItem => item.UrlName)</a>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Content)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AddedDate)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.PageID">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.PageID">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.PageID">Delete</a>
                        </td>
                    </tr>
                }

</tbody>

</table>


<br>
    <p>Total pages: @Model.pagesAmount</p>
    <ul class="pagination">
        @for (int i = 0; i < Model.pagesLinks; i++)
        {
            <li id="@(i+1)">@Html.ActionLink("" + (i + 1), "Index", new { currPage = (i + 1) })</li>
        }

    </ul>
    <script>
        var elem = document.getElementById(@Model.currentPage);
        elem.classList.add("active");
    </script>
